c
c
c     Program PRAIA_targets_search
c
c
c     Purpose
c
c
c
c     Given "xy" files generated by PRAIA, extracts target info and output
c     it like PRAIA output target files
c
c
c     This version also allows searching over output target (offsets) files.
c     Useful to re-compute offsets when previously identified targets had
c     their reference (RA,DEC) changed (ex.: new ephemeris version, ICRF
c     updates, etc). 
c
c     This version also reads input files in the MPC report format.
c
c
c
c      Last update: Marcelo Assafin - 10/Jan/2017
c   
c
c
c


      IMPLICIT REAL *8 (A-H,O-Z)

      character*50 list,target,output

      character*200 filexy

c
c     Reading input batch file
c

      write (*,*)
      write (*,*) 
      write (*,*) 'PRAIA Target Search'
      write (*,*) 
      write (*,*) 

c

c     open (77,file='PRAIA_targets_search_20_03.dat')

c
c
c

 1    continue

      read (*,*,end=200) key

      if (key.lt.1 .and. key.gt.3) stop

      read (*,10) list
      read (*,10) target
      read (*,10) output
      read (*,*) ecom
      read (*,*)


 10   format (a50)
 11   format (a200)

c     close (77)


      if (key.eq.2 .or. key.eq.3) then
      filexy=list
      nfxy=1
      go to 25
      endif


c
c     Number of xy fields
c

      open (9,file=list)

      do i=1,100000000
      read (9,*,end=20)
      enddo

 20   nfxy=i-1

      rewind (9)


 25   continue

c
c     Target and output files are now opened
c

      if1=1
      if2=2
      if3=7

      open (if3,file=target)
      open (if2,file=output)


c
c     Target information from xy fields
c
c     if1 -> xy file
c     if2 -> output of results
c     if3 -> list of target input data


      write (*,*) 
      write (*,*) 

      do 100 k=1,nfxy

      if (key.eq.1) read (9,11) filexy

      write (*,50) k,nfxy,filexy
 50   format('Searching file ',i5,' of ',i5,' : ',a200,' ...')

      open (if1,file=filexy)

      if (key.eq.1) call estat1 (ecom,if1,if2,if3)
      if (key.eq.2) call estat2 (ecom,if1,if2,if3)
      if (key.eq.3) call estat3 (ecom,if1,if2,if3)

      close (if1)
      rewind (if3)

 100  continue

      close (if2)
      close (if3)

      if (key.eq.1) close (9)

c
c     Continue to next search
c

      go to 1


c
c     That's all, folks!
c

 200  continue

      write (*,*) 
      write (*,*) 
      write (*,*) 'Execution terminated succesfully.'
      write (*,*) 
      write (*,*) 
      write (*,*) 

      end


c
c
c   
c     subroutine estat1
c
c     Retrives targets from xy files and output statistcs.
c
c     key    -> 1 = xy input file type                              
c
c     ecom   -> error box for (RA,DEC) identification (arcsec)
c
c     boxepo -> time error box for target identification
c
c     if1 -> xy file
c     if2 -> output of results
c     if3 -> list of target input data
c
c
c     Last update: 08/Dec/2009  M. Assafin
c
c

      subroutine estat1 (ecom,if1,if2,if3)


      IMPLICIT REAL *8 (A-H,O-Z)


      character*50 infits
      character*20 ichfil,mchobj,iobalv
      character*1 isig,menos

      data menos/'-'/

      hmsgms(i,j,a)=i+j/60.d0+a/3600.d0

c

      PI    = 0.3141592653589793D1
      GRARAD=PI/180.D0
      RADGRA=180.D0/PI


c
c     (RA,DEC) box error
c

      box=ecom

c
c     Time error box (default box=1 second)
c
      boxepo=1.d0

c
c     Converts boxepo to Julian date (fraction of day)
c

      boxepo=boxepo/(3600.d0*24.d0)

c

      ipegou=0


c


 100  read (if3,101,end=200) iah,iam,as,isig,idg,idm,ds,datalv,
     ?iobalv
 101  format(1x,i2,1x,i2,1x,f9.6,1x,a1,i2,1x,i2,1x,f8.5,1x,f16.8,
     ?1x,a20)

      rafat=hmsgms(iah,iam,as)
      defat=hmsgms(idg,idm,ds)
      if (isig.eq.menos) defat=-defat



c
c     Checks Julian Date of target and stars for identification
c

      rewind (if1)

 18   continue

      
      read (if1,10,err=18,end=12) xob,yob,seng,altu,fgcc,fumag,fumag2,
     ?xmgu,cudmg,cudmg2,xmgj,xmgh,xmgk,res2mg,resmg2,ermgj,ermgh,
     ?ermgk,pma,pmd,epma,epmd,ex,ey,erau,edeu,alfsiu,delsiu,
     ?nstaru,nfinau,alsiu,desiu,ktirau,ra,de,iuth,iutm,sut,iutano,
     ?iutmes,iutdia,dj,iexps,ichfil,infits,mchobj,nx,ny,ncom,aux,auy



c
c     Targets coordiantes with negative Julian Date can be searched in
c     any given xy field regardless of the instant of observation;
c     otherwise, target must fulfill (RA,DEC) error box AND time error
c     box
c



      if (datalv.gt.0.d0) then

      dtemp=dabs(datalv-dj)

      if (dtemp.gt.boxepo) go to 12

      endif

      go to 21

c
c     Until here, ok for search with or without time error box
c



 19   continue

      read (if1,10,err=19,end=12) xob,yob,seng,altu,fgcc,fumag,fumag2,
     ?xmgu,cudmg,cudmg2,xmgj,xmgh,xmgk,res2mg,resmg2,ermgj,ermgh,
     ?ermgk,pma,pmd,epma,epmd,ex,ey,erau,edeu,alfsiu,delsiu,
     ?nstaru,nfinau,alsiu,desiu,ktirau,ra,de,iuth,iutm,sut,iutano,
     ?iutmes,iutdia,dj,iexps,ichfil,infits,mchobj,nx,ny,ncom,aux,auy

 10   format(2(1x,f7.2),1x,f5.3,2(1x,f9.2),13(1x,f6.3),4(1x,f7.3),
     ?6(1x,f6.3),2(1x,i4),2(1x,f6.3),1x,i4,2(1x,f13.9),1x,i2,1x,i2,
     ?1x,f5.2,1x,i4,1x,i2,1x,i2,1x,f16.8,2x,i4,2x,a20,2x,a50,1x,a20,
     ?3(1x,i5),2(1x,f7.3))



 21   continue

c
c     Error box in (alpha,delta) for target identification
c


      dx=(ra-rafat)*dcos(defat*grarad)*3600.d0*15.d0
      dy=(de-defat)*3600.d0

      if (dabs(dx).gt.box) go to 20
      if (dabs(dy).gt.box) go to 20

      ipegou=1

c

      write (*,*)
      write (*,*)'offsets (RA,DE), Sigma(RA,DE), Ncat, Gauss_error(x,y),
     ?date, exptime, filter, target'
      write (*,*)

      write (*,16) dx,dy,alfsiu,delsiu,nfinau,ex,ey,iuth,
     ?iutm,sut,iutano,iutmes,iutdia,iexps,ichfil,iobalv

 16   format(4(1x,f7.3),2x,i5,2x,2(1x,f7.3),2x,i2,1x,i2,
     ?1x,f5.2,1x,i4,1x,i2,1x,i2,2x,i4,3x,a20,2x,a20)

c     
      if (ncom.eq.0) ncom=1
c

      write (if2,11) dx,dy,xob,yob,seng,altu,fgcc,fumag,fumag2,
     ?xmgu,cudmg,cudmg2,xmgj,xmgh,xmgk,res2mg,resmg2,ermgj,ermgh,
     ?ermgk,pma,pmd,epma,epmd,ex,ey,erau,edeu,alfsiu,delsiu,
     ?nstaru,nfinau,alsiu,desiu,ktirau,ra,de,iuth,iutm,sut,iutano,
     ?iutmes,iutdia,dj,iexps,ichfil,infits,iobalv,nx,ny,ncom,aux,auy


 11   format(2(1x,f7.3),2(1x,f7.2),1x,f5.3,2(1x,f9.2),13(1x,f6.3),
     ?4(1x,f7.3),6(1x,f6.3),2(1x,i4),2(1x,f6.3),1x,i4,2(1x,f13.9),1x,
     ?i2,1x,i2,1x,f5.2,1x,i4,1x,i2,1x,i2,1x,f16.8,2x,i4,2x,a20,2x,a50,
     ?1x,a20,3(1x,i5),2(1x,f7.3))


 12   continue

      go to 100

c

 20   go to 19

c


 200  continue


      return
      end




c
c
c   
c     subroutine estat2
c
c     Retrives targets from offset target files and output statistcs.
c
c     key    -> 2 = offset input file type
c
c     ecom   -> error box for (RA,DEC) identification (arcsec)
c
c     boxepo -> time error box for target identification
c
c     if1 -> offset input file              
c     if2 -> output of results
c     if3 -> list of target input data
c
c
c     Last update: 22/Dec/2009  M. Assafin
c
c

      subroutine estat2 (ecom,if1,if2,if3)


      IMPLICIT REAL *8 (A-H,O-Z)


      character*50 infits
      character*20 ichfil,mchobj,iobalv
      character*1 isig,menos

      data menos/'-'/

      hmsgms(i,j,a)=i+j/60.d0+a/3600.d0

c

      PI    = 0.3141592653589793D1
      GRARAD=PI/180.D0
      RADGRA=180.D0/PI


c
c     (RA,DEC) box error
c

      box=ecom

c
c     Time error box (default box=1 second)
c
      boxepo=1.d0

c
c     Converts boxepo to Julian date (fraction of day)
c

      boxepo=boxepo/(3600.d0*24.d0)


c
c     Reads (RA,DEC,JD) target file
c


 100  read (if3,101,end=200) iah,iam,as,isig,idg,idm,ds,datalv,
     ?iobalv
 101  format(1x,i2,1x,i2,1x,f9.6,1x,a1,i2,1x,i2,1x,f8.5,1x,f16.8,
     ?1x,a20)

      rafat=hmsgms(iah,iam,as)
      defat=hmsgms(idg,idm,ds)
      if (isig.eq.menos) defat=-defat



c
c     Reads offset target file with observed (RA,DEC,JD)
c



 12   continue


      read (if1,11,err=12,end=19) zx,zy,xob,yob,seng,altu,fgcc,fumag,
     ?fumag2,xmgu,cudmg,cudmg2,xmgj,xmgh,xmgk,res2mg,resmg2,ermgj,ermgh,
     ?ermgk,pma,pmd,epma,epmd,ex,ey,erau,edeu,alfsiu,delsiu,
     ?nstaru,nfinau,alsiu,desiu,ktirau,ra,de,iuth,iutm,sut,iutano,
     ?iutmes,iutdia,dj,iexps,ichfil,infits,mchobj,nx,ny,ncom,aux,auy


c
c     Error box in (alpha,delta) for target identification
c


      dx=(ra-rafat)*dcos(defat*grarad)*3600.d0*15.d0
      dy=(de-defat)*3600.d0

      if (dabs(dx).gt.box) go to 12
      if (dabs(dy).gt.box) go to 12

c
c     Error box in time
c

c
c     Targets coordiantes with negative Julian Date signifies no filter
c     with time for target search.




      if (datalv.gt.0.d0) then

      dtemp=dabs(datalv-dj)

      if (dtemp.gt.boxepo) go to 12

      endif



c

      write (*,*)
      write (*,*)'offsets (RA,DE), Sigma(RA,DE), Ncat, Gauss_error(x,y),
     ?date, exptime, filter, target'
      write (*,*)

      write (*,16) dx,dy,alfsiu,delsiu,nfinau,ex,ey,iuth,
     ?iutm,sut,iutano,iutmes,iutdia,iexps,ichfil,iobalv

 16   format(4(1x,f7.3),2x,i5,2x,2(1x,f7.3),2x,i2,1x,i2,
     ?1x,f5.2,1x,i4,1x,i2,1x,i2,2x,i4,3x,a20,2x,a20)

c     
      if (ncom.eq.0) ncom=1
c

      write (if2,11) dx,dy,xob,yob,seng,altu,fgcc,fumag,fumag2,
     ?xmgu,cudmg,cudmg2,xmgj,xmgh,xmgk,res2mg,resmg2,ermgj,ermgh,
     ?ermgk,pma,pmd,epma,epmd,ex,ey,erau,edeu,alfsiu,delsiu,
     ?nstaru,nfinau,alsiu,desiu,ktirau,ra,de,iuth,iutm,sut,iutano,
     ?iutmes,iutdia,dj,iexps,ichfil,infits,iobalv,nx,ny,ncom,aux,auy


 11   format(2(1x,f7.3),2(1x,f7.2),1x,f5.3,2(1x,f9.2),13(1x,f6.3),
     ?4(1x,f7.3),6(1x,f6.3),2(1x,i4),2(1x,f6.3),1x,i4,2(1x,f13.9),1x,
     ?i2,1x,i2,1x,f5.2,1x,i4,1x,i2,1x,i2,1x,f16.8,2x,i4,2x,a20,2x,a50,
     ?1x,a20,3(1x,i5),2(1x,f7.3))


      go to 12


c
c     Goes to the next target object in the target file
c

 19   rewind (if1)

      go to 100

c
c     Job finished
c


 200  continue


      return
      end







c
c
c   
c     subroutine estat3
c
c     Retrives targets from file in MPC report format.
c
c     key    -> 3 = MPC report file format  
c
c     ecom   -> error box for (RA,DEC) identification (arcsec)
c
c     boxepo -> time error box for target identification
c
c     if1 -> MPC file format
c     if2 -> output of results
c     if3 -> list of target input data
c
c
c     Last update: 22/Dec/2009  M. Assafin
c
c

      subroutine estat3 (ecom,if1,if2,if3)


      IMPLICIT REAL *8 (A-H,O-Z)


      character*50 infits
      character*20 ichfil,mchobj,iobalv
      character*1 isig,menos

      data menos/'-'/

      hmsgms(i,j,a)=i+j/60.d0+a/3600.d0

c

      PI    = 0.3141592653589793D1
      GRARAD=PI/180.D0
      RADGRA=180.D0/PI
c


      dnove=99.9d0

      xob=dnove
      yob=dnove
      seng=9.99d0
      altu=dnove
      fgcc=dnove
      fumag=dnove
      fumag2=dnove
      xmgu=dnove
      cudmg2=dnove
      xmgj=dnove
      xmgh=dnove
      xmgk=dnove
      res2mg=dnove
      resmg2=dnove
      ermgj=dnove
      ermgh=dnove
      ermgk=dnove
      pma=dnove
      pmd=dnove
      epma=dnove
      epmd=dnove
      ex=dnove
      ey=dnove
      erau=dnove
      edeu=dnove
      alfsiu=dnove
      delsiu=dnove
      nstaru=0
      nfinau=0
      alsiu=dnove
      desiu=dnove
      ktirau=99
      iexps=0
      infits='unknown'
      nx=0
      ny=0
      ncom=0
      aux=dnove
      auy=dnove

c
c     (RA,DEC) box error
c

      box=ecom

c
c     Time error box (default box=1 second)
c
      boxepo=1.d0

c
c     Converts boxepo to Julian date (fraction of day)
c

      boxepo=boxepo/(3600.d0*24.d0)


c
c     Reads (RA,DEC,JD) target file
c


 100  read (if3,101,end=200) iah,iam,as,isig,idg,idm,ds,datalv,
     ?iobalv
 101  format(1x,i2,1x,i2,1x,f9.6,1x,a1,i2,1x,i2,1x,f8.5,1x,f16.8,
     ?1x,a20)

      rafat=hmsgms(iah,iam,as)
      defat=hmsgms(idg,idm,ds)
      if (isig.eq.menos) defat=-defat



c
c     Reads MPC file format with observed (RA,DEC,Gregorian Date)
c


 12   continue


      read (if1,13,err=12,end=19) mchobj,iutano,iutmes,dia,iah,iam,as,
     ?isig,idg,idm,ds,cudmg,ichfil

 13   format(a14,1x,i4,1x,i2,1x,f8.5,1x,i2,1x,i2,1x,f6.3,a1,i2,1x,i2,1x,
     ?f5.2,9x,f4.1,a8)



c
c     Computes Julian Date
c

      iutdia=dia

      fd=dia-iutdia

      call iau_CAL2JD (iutano,iutmes,iutdia,djm0,djm,iflag)

      djm=djm+fd
            
      dj=djm+djm0


c
c     (RA,DEC) in decimal fraction
c

      ra=hmsgms(iah,iam,as)
      de=hmsgms(idg,idm,ds)
      if (isig.eq.menos) de=-de


c
c     hours, minutes and seconds in standard format 
c

      fd=fd*24.d0

      iuth=fd
      iutm=(fd-iuth)*60.d0
      sut=((fd-iuth)*60.d0-iutm)*60.d0


c
c     Error box in (alpha,delta) for target identification
c


      dx=(ra-rafat)*dcos(defat*grarad)*3600.d0*15.d0
      dy=(de-defat)*3600.d0

      if (dabs(dx).gt.box) go to 12
      if (dabs(dy).gt.box) go to 12

c
c     Error box in time
c

c
c     Targets coordiantes with negative Julian Date signifies no filter
c     with time for target search.




      if (datalv.gt.0.d0) then

      dtemp=dabs(datalv-dj)

      if (dtemp.gt.boxepo) go to 12

      endif



c

      write (*,*)
      write (*,*)'offsets (RA,DE), Sigma(RA,DE), Ncat, Gauss_error(x,y),
     ?date, exptime, filter, target'
      write (*,*)

      write (*,16) dx,dy,alfsiu,delsiu,nfinau,ex,ey,iuth,
     ?iutm,sut,iutano,iutmes,iutdia,iexps,ichfil,iobalv

 16   format(4(1x,f7.3),2x,i5,2x,2(1x,f7.3),2x,i2,1x,i2,
     ?1x,f5.2,1x,i4,1x,i2,1x,i2,2x,i4,3x,a20,2x,a20)

c     
      if (ncom.eq.0) ncom=1
c

      write (if2,17) dx,dy,xob,yob,seng,altu,fgcc,fumag,fumag2,
     ?xmgu,cudmg,cudmg2,xmgj,xmgh,xmgk,res2mg,resmg2,ermgj,ermgh,
     ?ermgk,pma,pmd,epma,epmd,ex,ey,erau,edeu,alfsiu,delsiu,
     ?nstaru,nfinau,alsiu,desiu,ktirau,ra,de,iuth,iutm,sut,iutano,
     ?iutmes,iutdia,dj,iexps,ichfil,infits,iobalv,nx,ny,ncom,aux,auy


 17   format(2(1x,f7.3),2(1x,f7.2),1x,f5.3,2(1x,f9.2),13(1x,f6.3),
     ?4(1x,f7.3),6(1x,f6.3),2(1x,i4),2(1x,f6.3),1x,i4,2(1x,f13.9),1x,
     ?i2,1x,i2,1x,f5.2,1x,i4,1x,i2,1x,i2,1x,f16.8,2x,i4,2x,a20,2x,a50,
     ?1x,a20,3(1x,i5),2(1x,f7.3))


      go to 12


c
c     Goes to the next target object in the target file
c

 19   rewind (if1)

      go to 100

c
c     Job finished
c


 200  continue


      return
      end








c
c     Subrotina cal2JD
c
c
      SUBROUTINE iau_CAL2JD ( IY, IM, ID, DJM0, DJM, J )
*+
*  - - - - - - - - - - -
*   i a u _ C A L 2 J D
*  - - - - - - - - - - -
*
*  Gregorian Calendar to Julian Date.
*
*  This routine is part of the International Astronomical Union's
*  SOFA (Standards of Fundamental Astronomy) software collection.
*
*  Status:  support routine.
*
*  Given:
*     IY,IM,ID    i     year, month, day in Gregorian calendar (Note 1)
*
*  Returned:
*     DJM0        d     MJD zero-point: always 2400000.5
*     DJM         d     Modified Julian Date for 0 hrs
*     J           i     status:
*                           0 = OK
*                          -1 = bad year   (Note 3: JD not computed)
*                          -2 = bad month  (JD not computed)
*                          -3 = bad day    (JD computed)
*
*  Notes:
*
*  1) The algorithm used is valid from -4800 March 1, but this
*     implementation rejects dates before -4799 January 1.
*
*  2) The Julian Date is returned in two pieces, in the usual SOFA
*     manner, which is designed to preserve time resolution.  The
*     Julian Date is available as a single number by adding DJM0 and
*     DJM.
*
*  3) In early eras the conversion is from the "Proleptic Gregorian
*     Calendar";  no account is taken of the date(s) of adoption of
*     the Gregorian Calendar, nor is the AD/BC numbering convention
*     observed.
*
*  Reference:
*
*     Explanatory Supplement to the Astronomical Almanac,
*     P.Kenneth Seidelmann (ed), University Science Books (1992),
*     Section 12.92 (p604).
*
*  This revision:  2000 December 15
*
*  Copyright (C) 2001 IAU SOFA Review Board.  See notes at end.
*
*-----------------------------------------------------------------------

      IMPLICIT NONE

      INTEGER IY, IM, ID
      DOUBLE PRECISION DJM0, DJM
      INTEGER J, MY, IYPMY

*  Earliest year allowed (4800BC)
      INTEGER IYMIN
      PARAMETER ( IYMIN = -4799 )

*  Month lengths in days
      INTEGER MTAB(12)
      DATA MTAB / 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31 /

* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

*  Preset status.
      J = 0

*  Validate year.
      IF ( IY.LT.IYMIN ) THEN
         J = -1
      ELSE

*     Validate month.
         IF ( IM.GE.1 .AND. IM.LE.12 ) THEN

*        Allow for leap year.
            IF ( MOD(IY,4) .EQ. 0 ) THEN
               MTAB(2) = 29
            ELSE
               MTAB(2) = 28
            END IF
            IF ( MOD(IY,100).EQ.0 .AND. MOD(IY,400).NE.0 ) MTAB(2) = 28

*        Validate day.
            IF ( ID.LT.1 .OR. ID.GT.MTAB(IM) ) J = -3

*        Result.
            MY = ( IM - 14 ) / 12
            IYPMY = IY + MY
            DJM0 = 2400000.5D0
            DJM = DBLE( ( 1461 * ( IYPMY + 4800 ) ) / 4
     :                + (  367 * ( IM-2 - 12*MY ) ) / 12
     :                - (    3 * ( ( IYPMY + 4900 ) / 100 ) ) / 4
     :                + ID - 2432076)

*        Bad month
         ELSE
            J = -2
         END IF
      END IF

*  Finished.

*+----------------------------------------------------------------------
*
*  Copyright (C) 2001
*  Standards Of Fundamental Astronomy Review Board
*  of the International Astronomical Union.
*
*  =====================
*  SOFA Software License
*  =====================
*
*  NOTICE TO USER:
*
*  BY USING THIS SOFTWARE YOU ACCEPT THE FOLLOWING TERMS AND CONDITIONS
*  WHICH APPLY TO ITS USE.
*
*  1. The Software is owned by the IAU SOFA Review Board ("the Board").
*
*  2. The Software is made available free of charge for use by:
*
*     a) private individuals for non-profit research; and
*
*     b) non-profit educational, academic and research institutions.
*
*  3. Commercial use of the Software is specifically excluded from the
*     terms and conditions of this license.  Commercial use of the
*     Software is subject to the prior written agreement of the Board on
*     terms to be agreed.
*
*  4. The provision of any version of the Software under the terms and
*     conditions specified herein does not imply that future versions
*     will also be made available under the same terms and conditions.
*
*  5. The user may modify the Software for his/her own purposes.  The
*     user may distribute the modified software provided that the Board
*     is informed and that a copy of the modified software is made
*     available to the Board on request.  All modifications made by the
*     user shall be clearly identified to show how the modified software
*     differs from the original Software, and the name(s) of the
*     affected routine(s) shall be changed.  The original SOFA Software
*     License text must be present.
*
*  6. In any published work produced by the user and which includes
*     results achieved by using the Software, the user shall acknowledge
*     that the Software was used in producing the information contained
*     in such publication.
*
*  7. The user may incorporate or embed the Software into other software
*     products which he/she may then give away free of charge but not
*     sell provided the user makes due acknowledgement of the use which
*     he/she has made of the Software in creating such software
*     products.  Any redistribution of the Software in this way shall be
*     made under the same terms and conditions under which the user
*     received it from the SOFA Center.
*
*  8. The user shall not cause the Software to be brought into
*     disrepute, either by misuse, or use for inappropriate tasks, or by
*     inappropriate modification.
*
*  9. The Software is provided to the user "as is" and the Board makes
*     no warranty as to its use or performance.   The Board does not and
*     cannot warrant the performance or results which the user may
*     obtain by using the Software.  The Board makes no warranties,
*     express or implied, as to non-infringement of third party rights,
*     merchantability, or fitness for any particular purpose.  In no
*     event will the Board be liable to the user for any consequential,
*     incidental, or special damages, including any lost profits or lost
*     savings, even if a Board representative has been advised of such
*     damages, or for any claim by any third party.
*
*  Correspondence concerning SOFA software should be addressed as
*  follows:
*
*     Internet email: sofa@rl.ac.uk
*     Postal address: IAU SOFA Center
*                     Rutherford Appleton Laboratory
*                     Chilton, Didcot, Oxon OX11 0QX
*                     United Kingdom
*
*
*-----------------------------------------------------------------------

      END




